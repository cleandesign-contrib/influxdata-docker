#!/bin/bash
set -o errexit  \
    -o nounset  \
    -o pipefail

if [[ ${PRODUCT} != 'influxdb' ]] || ( \
     [[ ${SUBPRODUCT} != 'meta' ]] &&  \
     [[ ${SUBPRODUCT} != 'data' ]]     \
   )
then
  printf 'Release is not Enterprise skipping...\n'; exit 0
fi

read -d '' -r PROGRAM <<'EOF' || true
  use strict;

  for my $line ( <STDIN> )
  {
    if ( $line =~
    /
      ^ENV\s+INFLUXDB_VERSION\s+   # prelude

      (([[:digit:]]+)              # major         cg: 2
       (?:\.([[:digit:]]+))?       # minor?        cg: 3
       (?:\.([[:digit:]]+))?       # patch?        cg: 4
       (?:\-?(rc[[:digit:]]+))?)   # rc?           cg: 5
      -c                           # interlude
      ([[:digit:]]+)               # repeat major  cg: 6
      (?:\.([[:digit:]]+))?        # repeat minor? cg: 7
      (?:\.([[:digit:]]+))?        # repeat patch? cg: 8
      (?:\-?(rc[[:digit:]]+))?     # repeat rc?    cg: 9
    /x )
    {
      # I tried using capture-group back-references within the regular
      # expression. However, it couldn't handle optional capture-
      # groups. So, instead, we check for equality here.
      if (( $2 eq $6 ) && ( $3 eq $7 ) &&
          ( $4 eq $8 ) && ( $5 eq $9 ))
      {
        printf("$1\n"); exit 0
      }
    }
  }

  exit 1
EOF

shopt -s failglob
shopt -s globstar
# `failglob` ensures that the glob-pattern has at least once match. This
# prevents bash from emitting the un-modified glob-pattern. `globstar`
# then ensures that matches are found within subdirectories.
VERSION=$(
  cat influxdb/${VERSION_MAJOR}.${VERSION_MINOR}/**/Dockerfile | \
    perl -e "${PROGRAM}"
)

cat <<EOF >>"${BASH_ENV}"
export VERSION=${VERSION}
EOF
